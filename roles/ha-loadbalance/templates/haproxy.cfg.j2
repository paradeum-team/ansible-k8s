# /etc/haproxy/haproxy.cfg
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log /dev/log local0
    log /dev/log local1 notice
    daemon

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 1
    timeout http-request    10s
    timeout queue           20s
    timeout connect         5s
    timeout client          20s
    timeout server          20s
    timeout http-keep-alive 10s
    timeout check           10s

#---------------------------------------------------------------------
# apiserver frontend which proxys to the control plane nodes
#---------------------------------------------------------------------
frontend apiserver
    bind *:{{api_server_port}}
    mode tcp
    option tcplog
    default_backend apiserver

#---------------------------------------------------------------------
# round robin balancing for apiserver
#---------------------------------------------------------------------
backend apiserver
    option httpchk GET /healthz
    http-check expect status 200
    mode tcp
    option ssl-hello-chk
    balance     roundrobin
{% for host in groups['masters'] %}
    server {{ hostvars[host].inventory_hostname}} {{ hostvars[host].ansible_host }}:{{api_server_src_port}} check
{% endfor %}

{% if ingress_nodeport_http is defined %}
frontend ingress-nginx-http
    bind *:80
    mode tcp
    option tcplog
    default_backend ingress-nginx-http

backend ingress-nginx-http
    mode tcp
    balance     roundrobin
{% for host in groups['masters'] %}
    server {{ hostvars[host].inventory_hostname}} {{ hostvars[host].ansible_host }}:{{ingress_nodeport_http}} check
{% endfor %}
{% endif %}

{% if ingress_nodeport_https is defined %}
frontend ingress-nginx-https
    bind *:443
    mode tcp
    option tcplog
    default_backend ingress-nginx-https

backend ingress-nginx-https
    mode tcp
    balance     roundrobin
{% for host in groups['masters'] %}
    server {{ hostvars[host].inventory_hostname}} {{ hostvars[host].ansible_host }}:{{ingress_nodeport_https}} check
{% endfor %}
{% endif %}
